@page "/analytics"
@using webStudioBlazor.Statistics
@inject AnalyticsService analytics
@inject IJSRuntime _js
@layout AdminLayout
@attribute [Authorize(Roles = "Admin")]
@rendermode InteractiveServer


<div class="card shadow-sm p-3">
    <div class="row g-2 align-items-end">
        <div class="col-md-3">
            <label class="form-label">Від</label>
            <InputDate @bind-Value="from" TValue="DateOnly" class="form-control" />
        </div>
        <div class="col-md-3">
            <label class="form-label">До</label>
            <InputDate @bind-Value="to" TValue="DateOnly" class="form-control" />
        </div>
        <div class="col-md-3">
            <label class="form-label">Групувати по</label>
            <select class="form-select" @bind="bucket">
                <option value="day">День</option>
                <option value="week">Тиждень</option>
                <option value="month">Місяць</option>
            </select>
        </div>
        <div class="col-md-3 d-grid">
            <button class="btn btn-primary" @onclick="Load">Показати</button>
        </div>
    </div>

    <div id="chartdiv" style="width: 100%; height: 500px;"></div>
</div>

@code {
    private DateOnly from = DateOnly.FromDateTime(DateTime.Today.AddMonths(-1));
    private DateOnly to = DateOnly.FromDateTime(DateTime.Today);
    private string bucket = "day";
    private bool firstRenderDone;
    private IJSObjectReference? _module;
    private bool _jsReady;
    private List<AnalyticsPoint> pieData = new();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {


          await  Load();

        }
    }
       

    private async Task Load()
    {
        // 1️⃣ Обчислюємо часовий діапазон
        var fromDateTime = from.ToDateTime(TimeOnly.MinValue);
        var toDateTime = to.ToDateTime(TimeOnly.MaxValue);

        // 2️⃣ Отримуємо дані з сервісу (наприклад, за певний період)
        var data = await analytics.GetAsync(fromDateTime, toDateTime);

        // 3️⃣ Мапимо в анонімний об’єкт для передачі в JS
        //    JS не розуміє DateOnly напряму, тому конвертуємо у string
        var mapped = data.Select(p => new
        {
            date = p.Date.ToString("yyyy-MM-dd"),
            cosmetologyCount = p.CosmetologyCount,
            massageCount = p.MassageCount,
            cosmetologyRevenue = p.CosmetologyRevenue,
            massageRevenue = p.MassageRevenue,
            totalRevenue = p.TotalRevenue
        });

        // 4️⃣ Викликаємо JavaScript для побудови графіка
        await _js.InvokeVoidAsync("GeneralPieChartExpenditure", mapped);
    }


    public async ValueTask DisposeAsync()
    {
        if (firstRenderDone)
            await _js.InvokeVoidAsync("dispose");
    }
}
