@page "/edit-massage-therapy"
@page "/edit-massage-therapy/{Id:int}"

@inject SeedService _seedService
@inject IWebHostEnvironment Env
@inject NavigationManager _navigationManager
@inject IJSRuntime _jSRuntime
@layout AdminLayout
@attribute [Authorize(Roles = "Admin")]
@rendermode InteractiveServer

<div class="container py-4">
    <!-- Breadcrumb -->
    <nav aria-label="breadcrumb" class="breadcrumb-card mb-4">
        <ol class="breadcrumb mb-0">
            <li class="breadcrumb-item">
                <a class="link-accent" href="/admin-massage-therapy">
                    <i class="bi bi-arrow-left-short"></i> Повернутися до адмін масажної терапії
                </a>
            </li>
            <li class="breadcrumb-item active" aria-current="page">
                @AddMessageTherapy
            </li>
        </ol>
    </nav>
    <section class="mb-5">
        <div class="card shadow-sm border-0 rounded-3">
            <div class="card-header bg-brand text-white d-flex align-items-center">
                <i class="bi bi-journal-text me-2"></i>
                <strong>@(Id == 0 ? "Додати картку " : "Редагувати картку")</strong>
            </div>
            <EditForm Model="@therapyCard"
                      OnValidSubmit="SaveTherapyCardAsync"
                      class="card form-card">

                <DataAnnotationsValidator />
                <ValidationSummary class="alert alert-danger small" />
                <div class="row g-3">
                    <div class="card-body">
                        <h5 class="card-title text-center mb-3">
                            @(therapyCard.Id == 0 ? "Додати нову картку" : "Редагувати картку")
                        </h5>

                        <div class="mb-3">
                            <label for="TitleCard" class="form-label form-label-compact">
                                Назва картки <span class="text-danger">*</span>
                            </label>
                            <InputText id="TitleCard"
                                       @bind-Value="therapyCard.TitleCard"
                                       class="form-control form-control-sm"
                                       placeholder="Введіть назву..." />
                            <ValidationMessage For="@(() => therapyCard.TitleCard)" class="text-danger small" />
                        </div>

                        <div class="mb-3">
                            <label for="DescriptionCard" class="form-label form-label-compact">
                                Опис картки <span class="text-danger">*</span>
                            </label>
                            <InputText id="DescriptionCard"
                                       @bind-Value="therapyCard.DescriptionCard"
                                       class="form-control form-control-sm"
                                       placeholder="Короткий опис..." />
                            <ValidationMessage For="@(() => therapyCard.DescriptionCard)" class="text-danger small" />
                        </div>

                        <div class="mb-3">
                            <label for="Price" class="form-label form-label-compact">
                                Ціна за послугу <span class="text-danger">*</span>
                            </label>
                            <div class="input-group input-group-sm">
                                <span class="input-group-text">₴</span>
                                <InputNumber id="Price"
                                             @bind-Value="therapyCard.Price"
                                             class="form-control"
                                             placeholder="0" />
                            </div>
                            <small class="text-muted">Вкажіть вартість у гривнях.</small>
                            <ValidationMessage For="@(() => therapyCard.Price)" class="text-danger small" />
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Вибрати категорію для сторінки</label><span class="text-danger">*</span><strong style="color:red">@ErrorMessageCategory</strong>
                            <InputSelect class="form-select" TValue="int" @bind-Value="therapyCard.CategoryId">
                                <option value="0">Оберіть категорію</option>
                                @foreach (var item in categories)
                                {
                                    <option value="@item.Id">@item.NameCategory</option>
                                }
                            </InputSelect>
                        </div>

                        <div class="mb-0">
                            <label class="form-label form-label-compact">Додайте силку на відео</label>
                            <InputText id="ImageUrl"
                                       @bind-Value="therapyCard.ImagePath"
                                       class="form-control form-control-sm"
                                       placeholder="Вставте: url video" />

                            @if (!string.IsNullOrEmpty(therapyCard.ImagePath))
                            {
                                <div class="ratio ratio-16x9">
                                    <lite-youtube videoid="@therapyCard.ImagePath" style="width: 100%; height: auto;" title="Комплексний масаж спини"></lite-youtube>
                                </div>
                            }
                        </div>
                    </div>
                </div>

                <div class="d-flex justify-content-end gap-2 mt-3">
                    <p style="color:red">@ErrorMessage</p>
                    @if (therapyCard.Id > 0)
                    {
                        <button type="button"
                                class="btn btn-outline-danger btn-action"
                                @onclick="(() => DeleteTherapyCardAsync(therapyCard.Id))">
                            <i class="bi bi-trash me-1"></i>
                            <span class="d-none d-sm-inline ms-1">Видалити</span>
                        </button>
                    }
                    <button type="submit" class="btn btn-primary btn-action">
                        <i class="bi bi-save me-1"></i>
                        <span class="d-none d-sm-inline ms-1">Зберегти</span>
                    </button>

                    <NavLink class="btn btn-outline-secondary btn-action"
                             @onclick="() => CancelTherapyCard()">
                        <i class="bi bi-x-circle me-1"></i>
                        <span class="d-none d-sm-inline ms-1">Скасувати</span>
                    </NavLink>
                </div>

            </EditForm>
        </div>
    </section>

    <!-- Таблиця в картці -->
    <section class="pt-3">
        <div class="container">
            <figure class="figure m-0">
                <div class="row g-2">
                    @{
                        var page = pageTherapies.FirstOrDefault(p => p.TitlePage == selectedMassage);
                    }
                    @foreach (var item in therapyCards.Where(x => x.CategoryId == page.CategoryId))
                    {
                        <div class="col-6 col-lg-3">
                            <div class="card shadow-sm border-0 rounded-3 product-card h-100">
                                <div class="ratio ratio-16x9">
                                    <lite-youtube class="card-img-top object-fit-cover" videoid="@item.ImagePath" style="width: 100%; height: auto;" title="@item.ImagePath"></lite-youtube>
                                </div>
                                <div class="card-body d-flex flex-column p-2">
                                    <h6 class="card-title mb-1 text-dark fw-semibold text-truncate"
                                        title="@item.TitleCard">
                                        @item.TitleCard
                                    </h6>
                                    <p class="card-text text-muted mb-2 small line-clamp-2"
                                       title="@item.DescriptionCard">
                                        @item.DescriptionCard
                                    </p>
                                    <div class="mt-auto d-flex flex-column flex-sm-row justify-content-end gap-2">
                                        <button @onclick="(() => EdittherapyCard(item.Id))"
                                                class="btn btn-outline-primary w-100 w-sm-auto">
                                            <i class="bi bi-pencil-square me-1"></i> Редагувати
                                        </button>

                                        <button class="btn btn-dark w-100 w-sm-auto">
                                            @item.Price.ToString("C0", new System.Globalization.CultureInfo("uk-UA"))
                                        </button>
                                    </div>


                                </div>
                            </div>
                        </div>
                    }
                </div>
            </figure>
        </div>
    </section>
</div>



@code {
    [Parameter]
    public int Id { get; set; }
    private string AddMessageTherapy = "Додати категорію";
    private TherapyCard therapyCard = new();

    private List<Category> categories = new();
    private List<PageTherapy> pageTherapies = new();
    private List<TherapyCard> therapyCards = new();

    private string ErrorMessageCategory = string.Empty;
    private string ErrorMessage = string.Empty;
    private IBrowserFile? uploadedFile;
    private const long maxSize = 5 * 1024 * 1024;
    private const string UploadsSubfolder = "uploads/cosmetology";
    public enum MediaMode { Image, Video }
    private string selectedMassage = "Масаж";


    protected override async Task OnInitializedAsync()
    {
        therapyCards = await _seedService.GetAllTherapyCardListAsync();
        pageTherapies = await _seedService.GetAllPageTherapyListAsync();
        categories = await _seedService.GetAllCategoryListAsync();
        StateHasChanged();
    }

    private void OnFileSelected(InputFileChangeEventArgs e)
    {
        uploadedFile = e.File;
    }

    private async Task SaveTherapyCardAsync()
    {       
        if (string.IsNullOrWhiteSpace(therapyCard.TitleCard)
          || string.IsNullOrWhiteSpace(therapyCard.DescriptionCard)
          || therapyCard.Price <= 0
          || therapyCard.CategoryId == 0
          || string.IsNullOrWhiteSpace(therapyCard.ImagePath))
        {
            return;
        }

        await _seedService.SaveCosmetologyTherapyCard(therapyCard);
        therapyCards = await _seedService.GetAllTherapyCardListAsync();
        therapyCard = new();
        StateHasChanged();
    }

    private async Task EdittherapyCard(int id)
    {
        therapyCard = await _seedService.EditTherapyCard(id);
    }

    private async Task DeleteTherapyCardAsync(int cardId)
    {    
        await _seedService.DeleteTherapyCardAsync(cardId);
        therapyCards = await _seedService.GetAllTherapyCardListAsync();
        therapyCard = new();
        this.StateHasChanged();
    }

    private void CancelTherapyCard()
    {
        therapyCard = new();
        StateHasChanged();
    }
}