@page "/admin-customer-orders"
@using System.Globalization
@inject AdminCustomerOrdersService OrdersService
@layout AdminLayout
@attribute [Authorize(Roles = "Admin")]
@rendermode InteractiveServer

@* --------- Header --------- *@
<div class="container mt-4">
    <h3 class="text-primary mb-3">
        <i class="bi bi-receipt"></i> Замовлення клієнтів
    </h3>

    <div class="card shadow-sm border-0 mb-3">
        <div class="card-body">
            <div class="row g-2 align-items-end">
                <div class="col-12 col-md-6">
                    <label class="form-label small">Пошук (ім’я / прізвище / телефон)</label>
                    <input class="form-control" @bind="search" @bind:event="oninput" placeholder="Петренко або +380..." />
                </div>
                <div class="col-6 col-md-3">
                    <label class="form-label small">Від</label>
                    <input type="date" class="form-control" @bind="from" />
                </div>
                <div class="col-6 col-md-3">
                    <label class="form-label small">До</label>
                    <input type="date" class="form-control" @bind="to" />
                </div>
            </div>

            <div class="mt-3 d-flex flex-column flex-sm-row gap-2">
                <button class="btn btn-primary w-100 w-sm-auto" @onclick="Reload">
                    <i class="bi bi-search"></i> Застосувати
                </button>
                <button class="btn btn-outline-secondary w-100 w-sm-auto" @onclick="ResetFilters">
                    <i class="bi bi-x-circle"></i> Скинути
                </button>
            </div>
        </div>
    </div>

    @if (loading)
    {
        <div class="text-body-secondary small">Завантаження…</div>
    }
    else if (rows.Count == 0)
    {
        <div class="text-body-secondary">Нічого не знайдено.</div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-hover align-middle">
                <thead class="table-light">
                    <tr>
                        <th>ID</th>
                        <th>Дата</th>
                        <th>Клієнт</th>
                        <th>Телефон</th>
                        <th>Місто</th>
                        <th>Відділення НП</th>
                        <th>Товар</th>
                        <th class="text-end">Кількість</th>
                        <th class="text-end">Ціна</th>
                        <th class="text-end">Сума позиції</th>
                        <th class="text-end">Всього</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var r in rows)
                    {
                        <tr>
                            <td>#@r.OrderId</td>
                            <td>@r.OrderDate.ToString("dd.MM.yyyy")</td>
                            <td>@r.ClientFullName</td>
                            <td><a href="tel:@r.ClientPhone">@r.ClientPhone</a></td>
                            <td>@r.City</td>
                            <td><div>@r.NewPostOffice</div></td>
                            <td>@r.ItemName</td>
                            <td class="text-end">@r.Quantity</td>
                            <td class="text-end">@Money(r.UnitPrice)</td>
                            <td class="text-end">@Money(r.LineTotal)</td>
                            <td class="text-end">@Money(r.OrderTotal)</td>
                        </tr>
                    }
                </tbody>
                <tfoot class="table-light">
                    <tr>
                        <th colspan="10" class="text-end">Загальна сума:</th>
                        <th class="text-end">@Money(totalOrdersAmount)</th>
                    </tr>
                </tfoot>
            </table>
        </div>
    }
</div>

@code {
    private string? search;
    private DateOnly? from;
    private DateOnly? to;

    private bool loading;
    private List<CustomerOrderRowDto> rows = new();
    private decimal totalOrdersAmount;

    protected override async Task OnInitializedAsync() => await Reload();

    private async Task Reload()
    {
        loading = true;
        StateHasChanged();

        rows = await OrdersService.GetCustomerOrdersAsync(search, from, to);

        totalOrdersAmount = rows
            .GroupBy(x => x.OrderId)
            .Sum(g => g.Max(x => x.OrderTotal));

        loading = false;
    }

    private async Task ResetFilters()
    {
        search = null;
        from = null;
        to = null;
        await Reload();
    }

    private static string Money(decimal v) =>
        v.ToString("C0", new CultureInfo("uk-UA"));
}